{"version":3,"sources":["components/Dashboard.jsx","components/ScheduleForm.jsx","components/EditSchedule.jsx","components/Surprise.jsx","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","useState","activities","setActivities","GetActivities","axios","get","then","res","console","log","data","catch","err","useEffect","className","map","act","i","activity","desc","moment","start","format","duration","timeunits","to","_id","onClick","e","delete","ScheduleForm","setActivity","setDesc","setStart","setDuration","setTimeunits","errors","setErrors","onSubmit","preventDefault","scheduleEvent","post","navigate","type","onChange","target","value","properties","message","EditSchedule","scheduleItem","put","pics","Surprise","src","alt","height","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uRAqDeA,EA/CG,SAAAC,GAAU,IAAD,EAEaC,mBAAS,IAFtB,mBAEhBC,EAFgB,KAEJC,EAFI,KAIjBC,EAAgB,WAClBC,IAAMC,IAAI,sCACLC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZL,EAAcK,EAAIG,SAErBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,OAgBlC,OAJAC,qBAAW,WACPV,MACD,IAGK,yBAAKW,UAAU,mCACVb,EAAWc,KAAK,SAACC,EAAKC,GAAN,OACb,yBAAKH,UAAU,uBACX,yBAAKA,UAAU,yCAAyCE,EAAIE,UAC5D,yBAAKJ,UAAU,aACX,2CAAiBE,EAAIG,MACrB,qCAAWC,IAAOJ,EAAIK,OAAOC,OAAO,4BACpC,wCAAcN,EAAIO,SAAlB,IAA6BP,EAAIQ,WACjC,kBAAC,IAAD,CAAMV,UAAU,0BAA0BW,GAAE,gBAAWT,EAAIU,MAA3D,QACJ,4BAAQZ,UAAU,qCAAqCa,QAAS,SAAAC,GAAC,OAvBtEF,EAuBiFV,EAAIU,SAtBhGtB,IAAMyB,OAAN,6CAAmDH,IAC9CpB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZJ,OAEHQ,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,MANnB,IAAAc,IAuBK,iBCoCTI,EA1EM,SAAA/B,GAAU,IAAD,EACMC,mBAAS,IADf,mBACnBkB,EADmB,KACTa,EADS,OAEF/B,mBAAS,IAFP,mBAEnBmB,EAFmB,KAEba,EAFa,OAGAhC,mBAAS,IAHT,mBAGnBqB,EAHmB,KAGZY,EAHY,OAIMjC,mBAAS,GAJf,mBAInBuB,EAJmB,KAITW,EAJS,OAKQlC,mBAAS,WALjB,mBAKnBwB,EALmB,KAKRW,EALQ,OAMEnC,mBAAS,IANX,mBAMnBoC,EANmB,KAMXC,EANW,KAuB1B,OACI,yBAAKvB,UAAU,gBACX,0BAAOA,UAAU,uBAAuBwB,SAjBzB,SAAAV,GACnBA,EAAEW,iBACF,IAAMC,EAAgB,CAACtB,WAAUC,OAAME,QAAOE,WAAUC,aACxDpB,IAAMqC,KAAK,qCAAsCD,GAC5ClC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAK0B,OACRC,EAAU9B,EAAIG,KAAK0B,QAEnBM,YAAS,QAGd/B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAMxB,yBAAKE,UAAU,4CAAf,qCACA,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,iBACX,yCACA,2BAAO6B,KAAK,OAAO7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIG,EAAYH,EAAEiB,OAAOC,UAC9EV,EAAOlB,SAAW,uBAAGJ,UAAU,eAAesB,EAAOlB,SAAS6B,WAAWC,SAAc,IAG7F,yBAAKlC,UAAU,iBACX,+CACA,8BAAUA,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAII,EAAQJ,EAAEiB,OAAOC,UAClEV,EAAOjB,KAAO,uBAAGL,UAAU,eAAesB,EAAOjB,KAAK4B,WAAWC,SAAc,IAEpF,yBAAKlC,UAAU,iBACX,yCACA,2BAAO6B,KAAK,iBAAiB7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIK,EAASL,EAAEiB,OAAOC,UACtFV,EAAOf,MAAQ,uBAAGP,UAAU,eAAesB,EAAOf,MAAM0B,WAAWC,SAAc,IAGtF,yBAAKlC,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,2CACA,2BAAO6B,KAAK,SAAS7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIM,EAAYN,EAAEiB,OAAOC,QAAQA,MAAOvB,IAChGa,EAAOb,SAAW,uBAAGT,UAAU,eAAesB,EAAOb,SAASwB,WAAWC,SAAc,KAIhG,yBAAKlC,UAAU,YACX,yBAAKA,UAAU,iBACX,wCACA,4BAAQA,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIO,EAAaP,EAAEiB,OAAOC,SAClE,2CACA,yCACA,4CAKhB,2BAAOH,KAAK,SAAS7B,UAAU,uBAAuBgC,MAAM,wB,QC+BjEG,EA/FM,SAAAlD,GAAU,IAAD,EACMC,mBAAS,IADf,mBACnBkB,EADmB,KACTa,EADS,OAEF/B,mBAAS,IAFP,mBAEnBmB,EAFmB,KAEba,EAFa,OAGAhC,mBAAS,IAHT,mBAGnBqB,EAHmB,KAGZY,EAHY,OAIMjC,mBAAS,GAJf,mBAInBuB,EAJmB,KAITW,EAJS,OAKQlC,mBAAS,WALjB,mBAKnBwB,EALmB,KAKRW,EALQ,OAMEnC,mBAAS,IANX,mBAMnBoC,EANmB,KAMXC,EANW,KAQ1BxB,qBAAW,WACPT,IAAMC,IAAN,6CAAgDN,EAAM2B,MACjDpB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZwB,EAAYxB,EAAIG,KAAKQ,UACrBc,EAAQzB,EAAIG,KAAKS,MACjBc,EAASb,IAAOb,EAAIG,KAAKW,OAAOC,OAAO,qBACvCY,EAAY3B,EAAIG,KAAKa,UACrBY,EAAa5B,EAAIG,KAAKc,cACvBb,OAAM,SAAAyB,GAAM,OAAI5B,QAAQC,IAAI2B,QACpC,CAACrC,EAAM2B,MAwBV,OACI,yBAAKZ,UAAU,OACX,0BAAMA,UAAU,uBAAuBwB,SAxBxB,SAAAV,GACnBA,EAAEW,iBACF,IAAMW,EAAe,CAAChC,WAAUC,OAAME,QAAOE,WAAUC,aACvDpB,IAAM+C,IAAN,6CAAgDpD,EAAM2B,KAAOwB,GACxD5C,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAK0B,OACRC,EAAU9B,EAAIG,KAAK0B,QAEnBM,YAAS,QAEd/B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAc5B,wBAAIE,UAAU,oBAAd,gBAEA,yBAAKA,UAAU,4BACP,yCACA,2BAAO6B,KAAK,OAAO7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIG,EAAYH,EAAEiB,OAAOC,QAAQA,MAAO5B,IAC7FkB,EAAOlB,SAAW,uBAAGJ,UAAU,eAAesB,EAAOlB,SAAS6B,WAAWC,SAAc,IAG7F,yBAAKlC,UAAU,4BACX,+CACA,8BAAUA,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAII,EAAQJ,EAAEiB,OAAOC,QAAQA,MAAO3B,IACjFiB,EAAOjB,KAAO,uBAAGL,UAAU,eAAesB,EAAOjB,KAAK4B,WAAWC,SAAc,IAEpF,yBAAKlC,UAAU,4BACX,yCACA,2BAAO6B,KAAK,iBAAiB7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIK,EAASL,EAAEiB,OAAOC,QAAQA,MAAOzB,IACrGe,EAAOf,MAAQ,uBAAGP,UAAU,eAAesB,EAAOf,MAAM0B,WAAWC,SAAc,IAGtF,yBAAKlC,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,4BACX,2CACA,uCAAO6B,KAAK,SAAS7B,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIM,EAAYN,EAAEiB,OAAOC,QAAQA,MAAOvB,GAAjG,QAAiHA,IAChHa,EAAOb,SAAW,uBAAGT,UAAU,eAAesB,EAAOb,SAASwB,WAAWC,SAAc,KAIhG,yBAAKlC,UAAU,YACX,yBAAKA,UAAU,4BACX,wCACA,4BAAQA,UAAU,eAAe8B,SAAU,SAAAhB,GAAC,OAAIO,EAAaP,EAAEiB,OAAOC,QAAQA,MAAOtB,GACjF,2CACA,yCACA,4CAKhB,2BAAOmB,KAAK,SAAS7B,UAAU,sCAAsCgC,MAAM,WAC3E,4BAAQhC,UAAU,sCAAsCa,QApDrD,WACXvB,IAAMyB,OAAN,6CAAmD9B,EAAM2B,MACpDpB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZmC,YAAS,QAEZ/B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QA8CtB,aCvFVwC,EAAO,CAAC,cAAe,eAAgB,eAAgB,eAAgB,eAAe,eAAe,gBAkB5FC,EAhBE,SAAAtD,GACb,OACI,oCACI,wBAAIe,UAAU,mBAAd,aACA,wBAAIA,UAAU,cAAd,iFACA,yBAAKwC,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAAS,6BACpD,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAC3C,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAC3C,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAC3C,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAC3C,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,UAC3C,yBAAKF,IAAKF,EAAK,GAAIG,IAAI,aAAaC,OAAO,Y,MC6BxCC,MApCf,WACE,OACE,yBAAK3C,UAAU,eACb,yBAAKA,UAAU,+CACb,kBAAC,IAAD,CAAMA,UAAU,4BAA4BW,GAAG,KAA/C,kBACA,4BAAQX,UAAU,iBAAiB6B,KAAK,SAASe,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAMhD,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BiD,GAAG,sBAC3C,yBAAKjD,UAAU,cACb,kBAAC,IAAD,CAAMA,UAAU,+BAA+BW,GAAG,KAAlD,QACA,kBAAC,IAAD,CAAMX,UAAU,+BAA+BW,GAAG,QAAlD,mBACA,uBAAGX,UAAU,iCAAiCkD,KAAK,aAAnD,8CAON,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAWC,KAAK,MAChB,kBAAC,EAAD,CAAcA,KAAK,SACnB,kBAAC,EAAD,CAAcA,KAAK,eACnB,kBAAC,EAAD,CAAUA,KAAK,eAKjB,yBAAKnD,UAAU,wCACb,wDC1BYoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxE,MAAK,SAAAyE,GACJA,EAAaC,gBAEdrE,OAAM,SAAAsE,GACLzE,QAAQyE,MAAMA,EAAMjC,c","file":"static/js/main.913b706e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Link, navigate } from '@reach/router';\nimport moment from 'moment';\n\n\nconst Dashboard = props => {\n\n    const [activities, setActivities] = useState([]);\n\n    const GetActivities = () => {\n        axios.get(\"http://localhost:8000/api/schedule\")\n            .then(res => {\n                console.log(res)\n                setActivities(res.data);\n            })\n            .catch(err => console.log(err));\n\n    }\n    const remove = _id => {\n        axios.delete(`http://localhost:8000/api/schedule/${_id}`)\n            .then(res => {\n                console.log(res);\n                GetActivities();\n            })\n            .catch(err => console.log(err));\n    }\n\n    useEffect( () => {\n        GetActivities();\n    }, []);\n\n    return(\n            <div className=\"justify-content-center my-3 m-5\">\n                {activities.map( (act, i) => \n                    <div className=\"card text-left mb-4\">\n                        <div className=\"card-header bg-dark text-primary lead\">{act.activity}</div>\n                        <div className=\"card-body\">\n                            <p>Description: {act.desc}</p>\n                            <p>Start: {moment(act.start).format('MMMM Do YYYY, h:mm:ss a')}</p>\n                            <p>Duration: {act.duration} {act.timeunits}</p>\n                            <Link className=\"btn btn-outline-primary\" to={`/edit/${act._id}`}>Edit</Link>\n                        <button className=\"btn btn-outline-danger float-right\" onClick={e => remove(act._id)}>Remove</button>\n\n                        </div>\n                        \n\n                    </div>\n                )}\n       \n            </div>    \n    )\n}\nexport default Dashboard;","import React, {useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst ScheduleForm = props => {\n    const [activity, setActivity] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [start, setStart] = useState(\"\");\n    const [duration, setDuration] = useState(0);\n    const [timeunits, setTimeunits] = useState(\"minutes\");\n    const [errors, setErrors] = useState({});\n\n    const createSchedule = e => {\n        e.preventDefault();\n        const scheduleEvent = {activity, desc, start, duration, timeunits}\n        axios.post(\"http://localhost:8000/api/schedule\", scheduleEvent)\n            .then(res =>{\n                console.log(res);\n                if(res.data.errors){\n                    setErrors(res.data.errors)\n                }else{\n                    navigate(\"/\");\n                }\n                \n            }).catch(err => console.log(err));\n    }\n\n    return(\n        <div className=\"card bg-info\">\n            <form  className=\"col-sm-8 offset-sm-2\" onSubmit={createSchedule} >\n                <div className=\"card-header bg-info text-light mt-3 lead\">Add a New Event to your Schedule:</div>\n                <div className=\"card-body bg-info\">\n                    <div className=\"lead mt-3 m-3\">\n                        <label>Event:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)} />\n                        { errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\n                    </div>\n\n                    <div className=\"lead mt-3 m-3\">\n                        <label>Description:</label>\n                        <textarea className=\"form-control\" onChange={e => setDesc(e.target.value)}></textarea>\n                        {errors.desc ? <p className=\"text-danger\">{errors.desc.properties.message}</p>: \"\"}\n                    </div>\n                    <div className=\"lead mt-3 m-3\">\n                        <label>Start:</label>\n                        <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)} />\n                        {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\"}\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <div className=\"lead mt-3 m-3\">\n                                <label>Duration</label>\n                                <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration} />\n                                {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\"}\n\n                            </div>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <div className=\"lead mt-3 m-3\">\n                                <label>Units</label>\n                                <select className=\"form-control\" onChange={e => setTimeunits(e.target.value)}>\n                                    <option>minutes</option>\n                                    <option>hours</option>\n                                    <option>days</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div> \n                    <input type=\"submit\" className=\"btn btn-primary mt-4\" value=\"Add to Schedule\" />\n                </div>\n            </form>\n        </div>\n        \n    )\n\n}\n\nexport default ScheduleForm;","import React, {useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst EditSchedule = props => {\n    const [activity, setActivity] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [start, setStart] = useState(\"\");\n    const [duration, setDuration] = useState(0);\n    const [timeunits, setTimeunits] = useState(\"minutes\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/schedule/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setActivity(res.data.activity);\n                setDesc(res.data.desc);\n                setStart(moment(res.data.start).format('YYYY-MM-DDTHH:mm'));\n                setDuration(res.data.duration);\n                setTimeunits(res.data.timeunits);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdateSchedule = e => {\n        e.preventDefault();\n        const scheduleItem = {activity, desc, start, duration, timeunits};\n        axios.put(`http://localhost:8000/api/schedule/${props._id}`, scheduleItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/schedule/${props._id}`)\n            .then(res => {\n                console.log(res);\n                navigate(\"/\");\n            })\n            .catch(err => console.log(err));\n    }\n\n    return(\n        <div className=\"row\">\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdateSchedule} >\n            <h4 className=\"text-light mt-4 \">Update Event</h4>\n\n            <div className=\"form-group lead mt-2 m-3\">\n                    <label>Event:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)} value={activity}/>\n                    { errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\n\n                </div>\n                <div className=\"form-group lead mt-3 m-3\">\n                    <label>Description:</label>\n                    <textarea className=\"form-control\" onChange={e => setDesc(e.target.value)} value={desc}></textarea>\n                    {errors.desc ? <p className=\"text-danger\">{errors.desc.properties.message}</p>: \"\"}\n                </div>\n                <div className=\"form-group lead mt-3 m-3\">\n                    <label>Start:</label>\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)} value={start}/>\n                    {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\"}\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group lead mt-3 m-3\">\n                            <label>Duration</label>\n                            <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration}value={duration} />\n                            {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\"}\n\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group lead mt-3 m-3\">\n                            <label>Units</label>\n                            <select className=\"form-control\" onChange={e => setTimeunits(e.target.value)} value={timeunits}>\n                                <option>minutes</option>\n                                <option>hours</option>\n                                <option>days</option>\n                            </select>\n                        </div>\n                    </div>\n                </div> \n                <input type=\"submit\" className=\"btn btn-primary mt-4 m-3 float-left\" value=\"Update\" />\n                <button className=\"btn btn-danger mt-4 m-3 float-right\" onClick={remove}>Delete</button>\n\n                \n\n            </form>\n        \n        </div>\n    )\n}\n\nexport default EditSchedule;","import React, {useState, useEffect} from 'react';\n//import img from './components/bby.png';\n\nconst pics = [\"img/bby.png\", \"img/bby2.png\", \"img/bby3.png\", \"img/bby4.png\", \"img/bby5.png\",\"img/bby6.png\",\"img/bby7.png\"];\n\nconst Surprise = props => {\n    return(\n        <>\n            <h1 className=\"text-light mt-3\">SURPRISE!</h1>\n            <h3 className=\"text-light\">Here are some pictures of cute baby sea otters to help you jumpstart your day</h3>\n            <img src={pics[0]} alt=\"baby otter\" height=\"190px\"/><br/>\n            <img src={pics[1]} alt=\"baby otter\" height=\"190px\"/>\n            <img src={pics[2]} alt=\"baby otter\" height=\"190px\"/>\n            <img src={pics[3]} alt=\"baby otter\" height=\"190px\"/>\n            <img src={pics[4]} alt=\"baby otter\" height=\"190px\"/>\n            <img src={pics[5]} alt=\"baby otter\" height=\"190px\"/>\n            <img src={pics[6]} alt=\"baby otter\" height=\"190px\"/>\n        </>\n    )\n}\n\nexport default Surprise;","import React from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport ScheduleForm from \"./components/ScheduleForm\";\nimport EditSchedule from \"./components/EditSchedule\";\nimport Surprise from \"./components/Surprise\";\nimport { Link, navigate, Router } from '@reach/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App bg-info\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand text-primary\" to=\"/\">myschedule.com</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <Link className=\"nav-item nav-link text-light\" to=\"/\">Home</Link>\n            <Link className=\"nav-item nav-link text-light\" to=\"/new\">Add a New Event</Link>\n            <a className=\"nav-item nav-link text-primary\" href=\"/surprise\">Today is a good day to have a good day!</a>\n          </div>\n        </div>\n      </nav>\n\n  \n\n      <Router>\n        <Dashboard path=\"/\"/>\n        <ScheduleForm path=\"/new\"/>\n        <EditSchedule path=\"/edit/:_id\"/>\n        <Surprise path=\"/surprise\" />\n      \n\n      </Router>\n      \n      <div className=\"footer text-left text-secondary my-5\">\n        <p>myschedule.com - @2020</p>\n      </div>\n    \n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}